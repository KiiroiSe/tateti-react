{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\reacttest\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\n//stylesheet\nimport './App.css';\n\n//fonts\nimport \"./fonts/ARCO.ttf\";\nimport \"./fonts/ARCOTypography.woff\";\nimport \"./fonts/ARCOTypography.woff2\";\n\n//components\nimport Board from './components/Board/Board';\nimport ScoreBoard from './components/ScoreBoard/ScordeBoard';\nimport NamesInput from './components/NamesInput/NamesInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst winningPositions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\nconst App = () => {\n  _s();\n  const [turn, setTurn] = useState('X');\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [winningSquares, setWinningSquares] = useState([]);\n  const [score, setScore] = useState({\n    X: 0,\n    O: 0\n  });\n  const [name, setName] = useState({\n    f: '',\n    s: ''\n  });\n  const reset = () => {\n    setTurn('X');\n    setSquares(Array(9).fill(null));\n    setWinningSquares([]);\n  };\n  const endGame = (result, winningPositions) => {\n    setTurn(null);\n    if (result !== null) {\n      setScore({\n        ...score,\n        [result]: score[result] + 1\n      });\n    }\n    setWinningSquares(winningPositions);\n    setTimeout(reset, 2000);\n  };\n  const checkForWinner = newSquares => {\n    for (let i = 0; i < winningPositions.length; i++) {\n      const [a, b, c] = winningPositions[i];\n      if (newSquares[a] && newSquares[a] === newSquares[b] && newSquares[a] === newSquares[c]) {\n        endGame(newSquares[a], winningPositions[i]);\n        return;\n      }\n    }\n    if (!newSquares.includes(null)) {\n      endGame(null, Array.from(Array(10).keys()));\n      return;\n    }\n    setTurn(turn == 'X' ? 'O' : 'X');\n  };\n  const handleClick = square => {\n    let newSquares = [...squares];\n    newSquares.splice(square, 1, turn);\n    setSquares(newSquares);\n    checkForWinner(newSquares);\n  };\n  const startGame = () => {\n    let p1Name = document.getElementsByName('p1')[0].value;\n    let p2Name = document.getElementsByName('p2')[0].value;\n    console.log([p1Name, p2Name]);\n    setName({\n      ...name,\n      [0]: p1Name\n    });\n    console.log(name);\n    reset();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(NamesInput, {\n      onClick: startGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boardContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Board, {\n        winningSquares: winningSquares,\n        turn: turn,\n        squares: squares,\n        onClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScoreBoard, {\n        scoreO: score.O,\n        scoreX: score.X\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"BKgCPz4V80MYZJSfwGzk37C8eJM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Board","ScoreBoard","NamesInput","jsxDEV","_jsxDEV","winningPositions","App","_s","turn","setTurn","squares","setSquares","Array","fill","winningSquares","setWinningSquares","score","setScore","X","O","name","setName","f","s","reset","endGame","result","setTimeout","checkForWinner","newSquares","i","length","a","b","c","includes","from","keys","handleClick","square","splice","startGame","p1Name","document","getElementsByName","value","p2Name","console","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","scoreO","scoreX","_c","$RefreshReg$"],"sources":["C:/wamp64/www/reacttest/src/App.js"],"sourcesContent":["import {useState} from 'react';\n//stylesheet\nimport './App.css';\n\n//fonts\nimport \"./fonts/ARCO.ttf\";\nimport \"./fonts/ARCOTypography.woff\";\nimport \"./fonts/ARCOTypography.woff2\";\n\n//components\nimport Board from './components/Board/Board';\nimport ScoreBoard from './components/ScoreBoard/ScordeBoard';\nimport NamesInput from './components/NamesInput/NamesInput';\n\nconst winningPositions = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\n\nconst App = () => {\n\n  const [turn, setTurn] = useState('X');\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [winningSquares, setWinningSquares] = useState([]);\n  const [score, setScore] = useState({\n    X:0,\n    O:0,\n  });\n  const [name, setName] = useState({\n    f:'',\n    s:'',\n  });\n\n  const reset = () => {\n    setTurn('X');\n    setSquares(Array(9).fill(null));\n    setWinningSquares([]);\n  }\n\n  const endGame = (result, winningPositions) => {\n    setTurn(null);\n    if(result !== null){\n      setScore({\n        ...score,\n        [result]: score[result] + 1,\n      })\n    }\n\n    setWinningSquares(winningPositions);\n    setTimeout(reset, 2000);\n  }\n\n  const checkForWinner = newSquares => {\n    for(let i = 0; i < winningPositions.length; i++) {\n      const [a,b,c] = winningPositions[i];\n      if(newSquares[a] && newSquares[a] === newSquares[b] && newSquares[a] === newSquares[c]){\n        endGame(newSquares[a], winningPositions[i]);\n        return\n      }\n    }\n\n    if(!newSquares.includes(null)) {\n      endGame(null, Array.from(Array(10).keys()));\n      return\n    }\n    setTurn(turn == 'X' ? 'O': 'X');\n  }\n\n  const handleClick = square => {\n    let newSquares = [...squares];\n    newSquares.splice(square, 1, turn);\n    setSquares(newSquares);\n    checkForWinner(newSquares);\n  }\n\n  const startGame = () => {\n    let p1Name = document.getElementsByName('p1')[0].value;\n    let p2Name = document.getElementsByName('p2')[0].value;\n    console.log([p1Name,p2Name]);\n    setName({\n      ...name,\n      [0]:p1Name,\n    });\n    console.log(name);\n    reset();\n  }\n\n  return (\n    <div className=\"container\">\n      <NamesInput onClick={startGame}/>\n      <div className='boardContainer'>\n        <Board\n          winningSquares={winningSquares}\n          turn={turn}\n          squares={squares} \n          onClick={handleClick}\n        />\n        <ScoreBoard scoreO={score.O} scoreX={score.X} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}